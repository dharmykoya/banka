{
  "swagger": "2.0",
  "info": {
    "description": "This is a bank",
    "version": "1.0.0",
    "title": "Banka",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "dharmykoya38@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "banktoday.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "auth",
      "description": "Signup and Signin users"
    },
    {
      "name": "accounts",
      "description": "User accounts actions"
    },
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "transactions",
      "description": "Transactions actions"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/account": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Add a new account to the app",
        "description": "",
        "operationId": "createAccount",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "formData",
            "description": "type of account",
            "required": true,
            "type": "string",
            "enum": [
              "savings",
              "current"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/accounts/{accountNumber}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Find account details of a particular account number",
        "description": "Returns a single account detail",
        "operationId": "getAccountByAccountNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber of account to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid accountNumber not found"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "accounts"
        ],
        "summary": "Updates an account status (dormant or active)",
        "description": "",
        "operationId": "updateAccountWithStatus",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber of the account that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "new status of the account",
            "required": true,
            "type": "string",
            "enum": [
              "active",
              "dormant"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "account number not found or invalid account number"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Deletes an account",
        "description": "",
        "operationId": "deleteAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "account number not found"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/accounts/{accountNumber}/transaction": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "get all transactions on an account number",
        "description": "",
        "operationId": "getTransactions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "account number of transactions to get",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "account number not found"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Returns all the accounts in the app",
        "description": "",
        "operationId": "allAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "status of account you want to view",
            "required": false,
            "type": "string",
            "enum": [
              "active",
              "dormant"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "No account available"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/transactions/{accountNumber}/{type}": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "credit or debit an account",
        "description": "",
        "operationId": "transaction",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "order placed for purchasing the pet",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "path",
            "description": "order placed for purchasing the pet",
            "required": true,
            "type": "integer",
            "enum": [
              "credit",
              "debit"
            ]
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "amount to be credited or debitted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "No account available"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "To view a specific transaction",
        "description": "",
        "operationId": "getTransaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of transaction that needs to be viewed",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "No account available"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create user",
        "description": "",
        "operationId": "signUp",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "firstName",
            "in": "formData",
            "description": "user first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "description": "user last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "users password",
            "required": true,
            "type": "string"
          },
          {
            "name": "confirm_password",
            "in": "formData",
            "description": "type to confirm password",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "type of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "email exist"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Accounts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "account type",
          "enum": [
            "savings",
            "current"
          ]
        },
        "accountNumber": {
          "type": "integer",
          "format": "int64"
        },
        "owner": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "account Status",
          "enum": [
            "active",
            "dormant"
          ]
        },
        "balance": {
          "type": "integer",
          "description": "account balance"
        },
        "createdOn": {
          "type": "string",
          "default": "Date"
        }
      },
      "xml": {
        "name": "Accounts"
      }
    },
    "Transactions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "transaction type",
          "enum": [
            "credit",
            "debit"
          ]
        },
        "accountNumber": {
          "type": "integer",
          "format": "int64"
        },
        "cashier": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "old_balance": {
          "type": "integer",
          "description": "old balance"
        },
        "new_balance": {
          "type": "integer",
          "description": "new balance"
        },
        "createdOn": {
          "type": "string",
          "default": "Date"
        }
      },
      "xml": {
        "name": "Transactions"
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "User type",
          "enum": [
            "staff",
            "client"
          ]
        },
        "admin": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Users"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}